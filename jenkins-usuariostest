// Generar una contraseña temporal utilizando una combinación de caracteres al azar
def generatePassword() {
    def chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    def password = (1..8).collect { chars[(Math.random() * chars.length()).toInteger()] }.join('')
    return password
}

pipeline {
    agent any
    parameters {
        string (name: 'login', defaultValue: '', description: 'Ingresa el login')
        string (name: 'name', defaultValue: '', description: 'Ingresa el nombre')
        string (name: 'lastname', defaultValue: '', description: 'Ingresa el apellido')
        choice (name: 'department', choices: ['contabilidad', 'finanzas', 'tecnologia'], description: 'Selecciona el departamento')
        string (name: 'deleteUserLogin', defaultValue: '', description: 'Ingresa el login del usuario a eliminar') 
    }
    stages {
        stage ('Validar parámetros') {
            steps {
                script {
                    if (params.login == '' && params.deleteUserLogin == '') {
                        error "El login para crear o eliminar usuario no puede estar vacío"
                    }
                    echo "Login recibido para creación: ${params.login}"
                    echo "Login recibido para eliminación: ${params.deleteUserLogin}"
                }
            }
        }
        stage ('Generar contraseña temporal') {
            steps {
                script {
                    def password = generatePassword()
                    echo "Password temporal generada: ${password}"
                    // Guardar la contraseña como variable de entorno para su uso posterior
                    env.PASSWORD = password
                }
            }
        }
        stage ('Crear usuario y asignar grupo') {
            when {
                expression { return params.login != '' }
            }
            steps {
                script {
                    def login = params.login ?: "${params.name.toLowerCase()}${params.lastname.toLowerCase()}"
                    sh "sudo useradd -m -s /bin/bash ${login}"
                    sh "sudo usermod -aG ${params.department} ${login}"
                }
            }
        }
        stage ('Asignar contraseña temporal') {
            when {
                expression { return params.login != '' }
            }
            steps {
                script {
                    echo "Asignando la contraseña temporal para ${params.login}"
                    sh "echo ${params.login}:${env.PASSWORD} | sudo chpasswd"
                }
            }
        }
        stage ('Expirar contraseña temporal') {
            when {
                expression { return params.login != '' }
            }
            steps {
                sh "sudo passwd -e ${params.login}"
            }
        }
        stage ('Eliminar usuario') {
            when {
                expression { return params.deleteUserLogin != '' }
            }
            steps {
                script {
                    echo "Eliminando usuario: ${params.deleteUserLogin}"
                    // Eliminar el usuario, su grupo y su directorio home
                    sh """
                        sudo userdel -r ${params.deleteUserLogin} || true
                        sudo groupdel ${params.deleteUserLogin} || true
                    """
                }
            }
        }**
    }
    post {
        success {
            echo "Usuario creado exitosamente"
            echo "Usuario: ${params.login}"
            echo "Password: ${env.PASSWORD}"
            echo "Departamento: ${params.department}"
        }
        aborted {
            echo "El usuario no fue creado"
            sh "sudo userdel -r ${params.login}"
        }
        failure {
            echo "Hubo un error en el proceso, el usuario fue eliminado"
            sh "sudo userdel -r ${params.login}"
        }
    }
}
